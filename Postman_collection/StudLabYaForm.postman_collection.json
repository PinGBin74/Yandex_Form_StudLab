{
	"info": {
		"_postman_id": "c01c56ee-fd8f-49a8-81d7-4e148fa8591e",
		"name": "StudLabYaForm",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40672205"
	},
	"item": [
		{
			"name": "registration",
			"item": [
				{
					"name": "User1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"First_Token_access_token\", responseData.token);",
									"}",
									"pm.test(\"Save access_token\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.access_token).to.exist;",
									"    pm.environment.set(\"First_Token_access_token\", response.access_token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"First Person\",\n  \"password\": \"First Person\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/user",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "User already exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"First Person\",\n  \"password\": \"First Person\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/user",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Second Person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"Second_Token_access_token\", responseData.token);",
									"}",
									"pm.test(\"Save access_token\", function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.access_token).to.exist;",
									"    pm.environment.set(\"Second_Token_access_token\", response.access_token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Second Person\",\n  \"password\": \"Second Person\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/user",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "First person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "secret",
									"value": "{{First_Token_access_token}}",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "payload",
									"value": "",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"First Person\",\n  \"password\": \"First Person\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/auth/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Second person",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "jwt",
							"jwt": [
								{
									"key": "secret",
									"value": "{{Second_Token_access_token}}",
									"type": "string"
								},
								{
									"key": "payload",
									"value": "",
									"type": "string"
								},
								{
									"key": "header",
									"value": "{}",
									"type": "string"
								},
								{
									"key": "isSecretBase64Encoded",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "algorithm",
									"value": "HS256",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "headerPrefix",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "queryParamKey",
									"value": "token",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Second Person\",\n  \"password\": \"Second Person\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8080/auth/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8080",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Forms",
			"item": [
				{
					"name": "POST",
					"item": [
						{
							"name": "First person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code === 200) {",
											"    const responseData = pm.response.json();",
											"    pm.environment.set(\"created_id_first_person\", responseData.id);",
											"    pm.test(\"ID сохранен\", function () {",
											"        pm.expect(responseData.id).to.be.a('number');",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{First_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Опрос о продукте\",\n  \"fields\": [\n    {\n      \"type\": \"text\",\n      \"label\": \"Ваше имя\",\n      \"options\": []\n    },\n    {\n      \"type\": \"radio\",\n      \"label\": \"Как часто вы пользуетесь нашими продуктами?\",\n      \"options\": [\"Каждный день\", \"Пару раз в неделю\", \"Редко\"]\n    },\n    {\n      \"type\": \"checkbox\",\n      \"label\": \"Что вы думаете о наших продуктах?\",\n      \"options\": [\"Они прекрасны\", \"Они ужасны\", \"Меня все устраивает\", \"Есть моменты, которые хотелось бы улучшить\"]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/create",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Second person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if (pm.response.code === 200) {",
											"    const responseData = pm.response.json();",
											"    pm.environment.set(\"created_id_second_person\", responseData.id);",
											"    pm.test(\"ID сохранен\", function () {",
											"        pm.expect(responseData.id).to.be.a('number');",
											"    });",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Second_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Опрос о пельменях\",\n  \"fields\": [\n    {\n      \"type\": \"text\",\n      \"label\": \"Ваше имя\",\n      \"options\": []\n    },\n    {\n      \"type\": \"radio\",\n      \"label\": \"Как часто вы кушаете пельмени?\",\n      \"options\": [\"Каждный день\", \"Пару раз в неделю\", \"Редко\"]\n    },\n    {\n      \"type\": \"checkbox\",\n      \"label\": \"Пельмени какой фирмы вы предпочитаете больше всего?\",\n      \"options\": [\"Фирма 1\", \"Фирма 2\", \"Фирма 3\", \"Другая фирма\"]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/create",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET",
					"item": [
						{
							"name": "All Forms",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/all",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "Form by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"form_id\":{{created_id_first_person}}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_first_person}}",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_first_person}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCH",
					"item": [
						{
							"name": "First person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{First_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"form_id\":{{created_id_first_person}},\n    \"title\":\"Title changed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_first_person}}?title=Title changed",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_first_person}}"
									],
									"query": [
										{
											"key": "title",
											"value": "Title changed"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "First person ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{First_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"form_id\":{{created_id_second_person}},\n\"title\":\"Changed\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_second_person}}?title=Title changed",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_second_person}}"
									],
									"query": [
										{
											"key": "title",
											"value": "Title changed"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Second User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Second_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"form_id\":{{created_id_second_person}},\n\"title\":\"Titled changed by second person\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_second_person}}?title=Titled changed by second person",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_second_person}}"
									],
									"query": [
										{
											"key": "title",
											"value": "Titled changed by second person"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "DELETE",
					"item": [
						{
							"name": "First person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{First_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"form_id\":{{created_id_first_person}}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_first_person}}?delete_form_form__form_id__delete",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_first_person}}"
									],
									"query": [
										{
											"key": "delete_form_form__form_id__delete",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "First person ERROR",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{First_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"form_id\":{{created_id_second_person}}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_second_person}}?delete_form_form__form_id__delete",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_second_person}}"
									],
									"query": [
										{
											"key": "delete_form_form__form_id__delete",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Second person",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{Second_Token_access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"form_id\":{{created_id_second_person}}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8080/form/{{created_id_second_person}}?delete_form_form__form_id__delete",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8080",
									"path": [
										"form",
										"{{created_id_second_person}}"
									],
									"query": [
										{
											"key": "delete_form_form__form_id__delete",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}